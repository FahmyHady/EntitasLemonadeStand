//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyAssetListenerComponent anyAssetListener { get { return (AnyAssetListenerComponent)GetComponent(GameComponentsLookup.AnyAssetListener); } }
    public bool hasAnyAssetListener { get { return HasComponent(GameComponentsLookup.AnyAssetListener); } }

    public void AddAnyAssetListener(System.Collections.Generic.List<IAnyAssetListener> newValue) {
        var index = GameComponentsLookup.AnyAssetListener;
        var component = (AnyAssetListenerComponent)CreateComponent(index, typeof(AnyAssetListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyAssetListener(System.Collections.Generic.List<IAnyAssetListener> newValue) {
        var index = GameComponentsLookup.AnyAssetListener;
        var component = (AnyAssetListenerComponent)CreateComponent(index, typeof(AnyAssetListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyAssetListener() {
        RemoveComponent(GameComponentsLookup.AnyAssetListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyAssetListener;

    public static Entitas.IMatcher<GameEntity> AnyAssetListener {
        get {
            if (_matcherAnyAssetListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyAssetListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyAssetListener = matcher;
            }

            return _matcherAnyAssetListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyAssetListener(IAnyAssetListener value) {
        var listeners = hasAnyAssetListener
            ? anyAssetListener.value
            : new System.Collections.Generic.List<IAnyAssetListener>();
        listeners.Add(value);
        ReplaceAnyAssetListener(listeners);
    }

    public void RemoveAnyAssetListener(IAnyAssetListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyAssetListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyAssetListener();
        } else {
            ReplaceAnyAssetListener(listeners);
        }
    }
}
